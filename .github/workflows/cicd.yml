name: CI/CD Pipeline for PollApp

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Lấy source code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Cài đặt Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      # 3. Cài đặt dependencies
      - name: Install dependencies
        run: npm install

      # 4. Kiểm tra lint
      - name: Run linting
        run: npm run lint || echo "Linting not configured, skipping..."

      # 5. Chạy test
      - name: Run tests
        run: npm test

      # 6. Kiểm tra bảo mật
      - name: Run security audit
        run: npm audit --audit-level moderate || echo "Security issues found, but continuing..."

      # 7. Kiểm tra độ bao phủ mã (coverage)
      - name: Check code coverage
        run: npm run test:coverage || echo "Coverage not configured, skipping..."

      # 8. Build project nếu có
      - name: Build application
        run: npm run build || echo "Build script not found, skipping..."

      # 9. Đăng nhập Docker Hub
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # 10. Build Docker image
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/pollapp:latest .

      # 11. Push Docker image
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/pollapp:latest

      # 12. Deploy tới EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            cd ~/PollApp || git clone https://github.com/YenNu1402/PollApp.git ~/PollApp
            cd ~/PollApp
            docker-compose down || true
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/pollapp:latest
            docker-compose up -d
            docker image prune -f

      # 13. Gửi thông báo kết quả
      - name: Send notification
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "CI/CD pipeline completed successfully!"
            echo "Deployment ready for PollApp"
          else
            echo "CI/CD pipeline failed!"
            echo "Please check the logs for more details."
          fi

      # 14. Tạo báo cáo triển khai
      - name: Generate deployment report
        if: success()
        run: |
          echo "Deployment Report" > deployment-report.txt
          echo "===================" >> deployment-report.txt
          echo "Date: $(date)" >> deployment-report.txt
          echo "Branch: ${{ github.ref_name }}" >> deployment-report.txt
          echo "Commit: ${{ github.sha }}" >> deployment-report.txt
          echo "Author: ${{ github.actor }}" >> deployment-report.txt
          echo "Status: SUCCESS" >> deployment-report.txt
          echo "" >> deployment-report.txt
          echo "Code quality checks passed" >> deployment-report.txt
          echo "Docker image pushed" >> deployment-report.txt
          echo "Deployed to EC2" >> deployment-report.txt
          echo "Report generated successfully!"
          cat deployment-report.txt
          # Optionally, upload the report as an artifact